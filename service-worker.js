const CACHE_NAME="storyverse-appshell-v1",URLS_TO_CACHE=["./","./index.html","./manifest.json","./app.bundle.js","./app.css","./images/icons/icon-192x192.png","./images/icons/icon-512x512.png","./favicon.png","./images/logo.png","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"];self.addEventListener("install",(e=>{console.log("Service Worker: Menginstal..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>{console.log("Service Worker: Caching Application Shell");const o=URLS_TO_CACHE.map((o=>{const a=new Request(o,{mode:"cors"});return fetch(a).then((t=>t.ok?e.put(a,t):(console.warn(`Service Worker: Gagal cache ${o} selama instalasi. Status: ${t.status}. Mungkin karena CORS atau resource tidak tersedia.`),Promise.resolve()))).catch((e=>(console.warn(`Service Worker: Gagal fetch ${o} selama instalasi. Error: ${e.message}`),Promise.resolve())))}));return Promise.all(o)})).then((()=>(console.log("Service Worker: Proses caching Application Shell selesai (beberapa aset mungkin gagal)."),self.skipWaiting()))).catch((e=>{console.error("Service Worker: Error besar selama fase instalasi caching Application Shell:",e)})))})),self.addEventListener("activate",(e=>{console.log("Service Worker: Mengaktifkan..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>e!==CACHE_NAME?(console.log("Service Worker: Menghapus cache lama:",e),caches.delete(e)):null))))).then((()=>(console.log("Service Worker: Cache lama dibersihkan."),self.clients.claim()))))})),self.addEventListener("fetch",(e=>{const{request:o}=e;"GET"===o.method&&e.respondWith(caches.match(o).then((e=>e||fetch(o).then((e=>e)).catch((e=>{console.error("Service Worker: Gagal mengambil dari network dan tidak ada di cache:",o.url,e)})))))})),self.addEventListener("push",(e=>{console.log("Service Worker: Pesan Push diterima.");let o={title:"StoryVerse Notification",options:{body:"Ada sesuatu yang baru di StoryVerse!",icon:"./images/icons/icon-192x192.png",badge:"./images/icons/icon-96x96.png",data:{url:"/"}}};if(e.data)try{const a=e.data.text(),t=JSON.parse(a);console.log("Service Worker: Payload Push Notification:",t),t.title&&(o.title=t.title),t.options&&(t.options.body&&(o.options.body=t.options.body),t.options.icon&&(o.options.icon=t.options.icon),t.options.badge&&(o.options.badge=t.options.badge),t.options.data&&(o.options.data=t.options.data))}catch(e){console.error("Service Worker: Gagal mem-parse payload push atau payload tidak ada:",e)}e.waitUntil(self.registration.showNotification(o.title,o.options))})),self.addEventListener("notificationclick",(e=>{console.log("Service Worker: Notifikasi diklik."),e.notification.close();const o=e.notification.data&&e.notification.data.url?e.notification.data.url:"/";e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const a of e)if(new URL(a.url).pathname===o&&"focus"in a)return a.focus();if(clients.openWindow)return clients.openWindow(o)})))}));